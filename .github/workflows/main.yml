name: 'Main Workflow'
on: [push]
env:
  module_name: "freebsd-sysctl"
  deployment_trigger_repo: "gronke/__deploy-pip"
jobs:
  checks:
    name: 'Code Style'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.X'
    - run: python -m ensurepip
    - run: python -m pip install -U -r requirements-dev.txt
    - run: python -m flake8 --version
    - run: python -m mypy --version
    - run: python -m flake8 --exclude=".travis,.eggs,__init__.py,tests"
    - run: python -m bandit --skip B404,B110 --exclude tests/ *.py freebsd_sysctl/*.py
  # test:
  #   name: "Unit Tests"
  #   if: "false"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-python@v1
  #     with:
  #       python-version: '3.X'
  #   - run: python -m ensurepip
  #   - run: python -m pip install pytest pytest-benchmark
  #   - run: python -m pytest
  sdist:
    name: "Bundle Distribution"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.X'
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(python -c "import freebsd_sysctl.__version__; print('.'.join([str(n) for n in freebsd_sysctl.__version__.VERSION]))")
    - name: Read Changelog
      id: get_changelog
      run: cat CHANGELOG.md | sed -n -e '/^## CURRENT/,$p' | tail -n +2 | sed -n -e '1,/^## /p' | grep -v "^## " | sed '/[a-z]/,$!d' | perl -p -e 'eof && chomp' 
    - run: python setup.py sdist
    - uses: actions/upload-artifact@v1
      with:
        name: "${{ env.module_name }}-${{ steps.get_version.outputs.VERSION }}.tar.gz"
        path: "dist/${{ env.module_name }}-${{ steps.get_version.outputs.VERSION }}.tar.gz"
        description: "${{ env.module_name }} v${{ steps.get_version.outputs.VERSION }}"
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release v${{ steps.get_version.outputs.VERSION }}
        body: ${{ steps.get_changelog.outputs.data }}
        draft: false
        prerelease: false
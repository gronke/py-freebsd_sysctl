name: 'Main Workflow'
on: [push]
env:
  module_name: "freebsd-sysctl"
jobs:
  checks:
    name: 'Code Style'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.X'
    - run: python -m ensurepip
    - run: python -m pip install -U -r requirements-dev.txt
    - run: python -m flake8 --version
    - run: python -m mypy --version
    - run: python -m flake8 --exclude=".travis,.eggs,__init__.py,tests"
    - run: python -m bandit --skip B404,B110 --exclude tests/ *.py freebsd_sysctl/*.py
  test:
    name: "Unit Tests"
    if: "false"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.X'
    - run: python -m ensurepip
    - run: python -m pip install pytest pytest-benchmark
    - run: python -m pytest
  sdist:
    name: "Bundle Distribution"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.X'
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(python -c "import freebsd_sysctl.__version__; print('.'.join([str(n) for n in freebsd_sysctl.__version__.VERSION]))")
    - run: python setup.py sdist
    - uses: actions/upload-artifact@v1
      with:
        name: "${{ env.module_name }}-${{ steps.get_version.outputs.VERSION }}.tar.gz"
        path: "dist/${{ env.module_name }}-${{ steps.get_version.outputs.VERSION }}.tar.gz"
        description: "${{ env.module_name }} v${{ steps.get_version.outputs.VERSION }}"
  deploy:
    name: "Deploy Release"
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [checks, sdist]
    steps:
    - run: echo "Upload the Distribution"
